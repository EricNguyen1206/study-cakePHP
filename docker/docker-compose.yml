###############################################################################
#                          Generated on phpdocker.io                          #
###############################################################################
services:
  # myapp-mailhog:
  #   image: 'mailhog/mailhog:latest'
  #   container_name: myapp-mailhog
  #   ports:
  #     - "8125:8025"

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - 9090:9090
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   restart: always
  #   depends_on:
  #     - prometheus

  myapp-mysql:
    image: 'mysql:8.0'
    container_name: myapp-mysql
    working_dir: /var/www/myapp
    volumes:
        # - ../mysql:/var/lib/mysql
        # - ../mysql-files:/var/lib/mysql-files
        # - ../cakephp:/var/www/myapp
        # - ./mysql/my.cnf:/etc/mysql/my.cnf
      - mysql_data:/var/lib/mysql  # Use Docker volume instead of local directory
    ports:
      - "8106:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  myapp-nginx:
    image: 'nginx:alpine'
    container_name: myapp-nginx
    working_dir: /var/www/myapp
    volumes:
        - ../cakephp:/var/www/myapp
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
     - "8180:80"
    links:
     - myapp-php-fpm

  myapp-php-fpm:
    build: ./php-fpm
    container_name: myapp-php-fpm
    working_dir: /var/www/myapp
    volumes:
      - ../cakephp:/var/www/myapp
      - ./php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
    links:
      # - myapp-mailhog
      - myapp-mysql

  # Add phpMyAdmin service
  myapp-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: myapp-phpmyadmin
    environment:
      PMA_HOST: myapp-mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:80"  # Expose phpMyAdmin on port 8080
    depends_on:
      - myapp-mysql

# Define the volume at the bottom
volumes:
  mysql_data:  # This creates a named volume for MySQL data
  # grafana-storage:  # This creates a named volume for Grafana data